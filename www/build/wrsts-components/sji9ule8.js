/*! Built with http://stenciljs.com */
const{h,Context}=window.WrstsComponents;var SerializationType;!function(e){e[e.Default=0]="Default",e[e.Object=1]="Object",e[e.Array=2]="Array"}(SerializationType||(SerializationType={}));class ComponentSerializerResolver{}function resolveKey(e,t){return e.name||e.id||t}function resolveCheckboxValue(e){return e.checked}function resolveDataAttributesToObj(e){const t={};return resolveDataAttributesToArr(e).forEach(e=>{t[e.name]=e.value}),t}function resolveDataAttributesToArr(e){return[].filter.call(e.attributes,e=>/^data-/.test(e.name)).map(e=>{return{name:e.name.substr(5).replace(/-(.)/g,(e,t)=>t.toUpperCase()),value:e.value}})}ComponentSerializerResolver.ResolveKey=resolveKey,ComponentSerializerResolver.ResolveCheckboxValue=resolveCheckboxValue,ComponentSerializerResolver.ResolveDataAttributes=((e,t)=>t===SerializationType.Object?resolveDataAttributesToObj(e):resolveDataAttributesToArr(e));class ComponentSerializer{static SerializeData(e,t,i){const r=i.valueResolver;let o=i.keyResolver,n=i.dataResolver;switch(i.keyResolver||(o=ComponentSerializerResolver.ResolveKey),i.dataResolver||(n=ComponentSerializerResolver.ResolveDataAttributes),t){case SerializationType.Object:return serializeCollectionToObject(e,t,o,r,n);case SerializationType.Array:return serializeCollectionToArray(e,t,o,r,n);case SerializationType.Default:return serializeCollectionToObjectSimple(e,o,r)}}static Serialize(e,t,i){return this.SerializeData([e],t,i)}}function toObjectWithName(e,t,i){return{name:e,value:t,data:i}}function toObjectWithotName(e,t){return{value:e,data:t}}function serializeCollectionToArray(e,t,i,r,o){return e.reduce((e,n,s)=>(e[s]=toObjectWithName(i(n,s),r(n),o(n,t)),e),[])}function serializeCollectionToObject(e,t,i,r,o){return e.reduce((e,n,s)=>(e[i(n,s)]=toObjectWithotName(r(n),o(n,t)),e),{})}function serializeCollectionToObjectSimple(e,t,i){return e.reduce((e,r,o)=>(e[t(r,o)]=i(r),e),{})}class WrstsCheckbox{constructor(){this.checked=!1,this.disabled=!1,this.groupBoxesBindings=[]}onGroupTogglerChanged(e){null===e||void 0===e||""===e?this.releaseGroupBindings():this.rebindGroup()}check(e){this.indeterminate&&(this.indeterminateState=!1,this.checkbox.indeterminate=!1),this.checked||(this.checked=!0,this.checkbox.checked=!0,this.isToggler&&!e&&this.handleGroupElementsOnTogglerCheck(!0),this.change.emit(!0))}uncheck(e){this.indeterminate&&(this.indeterminateState=!1,this.checkbox.indeterminate=!1),this.checked&&(this.checked=!1,this.checkbox.checked=!1,this.isToggler&&!e&&this.handleGroupElementsOnTogglerCheck(!1),this.change.emit(!1))}setIndeterminate(){this.indeterminate&&!this.indeterminateState&&(this.indeterminateState=!0,this.checked=!1,this.checkbox.checked=!1,this.checkbox.indeterminate=!0,this.change.emit(!1))}getNativeElement(){return this.checkbox}rebindGroup(){if(!this.isToggler)return;this.releaseGroupBindings();const e=Array.prototype.slice.call(document.querySelectorAll(`wrsts-checkbox[group="${this.groupToggler}"]`));e&&(this.groupBoxesBindings=[],e.forEach(e=>{this.groupBoxesBindings.push({elementRef:e,listener:e.addEventListener("change",this.changeGroupElementHandler.bind(this))})}))}getGroupBoxesBindings(){return this.groupBoxesBindings}getData(e=1){return ComponentSerializerResolver.ResolveDataAttributes(this.wrstsCheckBox,e)}toJson(e=0){const t=e;return this.isToggler?ComponentSerializer.SerializeData([this.wrstsCheckBox,...this.groupBoxesBindings.map(e=>e.elementRef)],t,{valueResolver:ComponentSerializerResolver.ResolveCheckboxValue}):ComponentSerializer.Serialize(this.wrstsCheckBox,t,{valueResolver:ComponentSerializerResolver.ResolveCheckboxValue})}componentDidLoad(){this.checkbox=this.wrstsCheckBox.querySelector('input[type="checkbox"]'),this.checkbox.checked=this.checked,this.rebindGroup()}get totalGroupBoxesCount(){return this.groupBoxesBindings.filter(e=>e.elementRef.group===this.groupToggler).length}get groupCheckedCount(){return this.groupBoxesBindings.filter(e=>e.elementRef.group===this.groupToggler&&e.elementRef.checked).length}get isToggler(){return void 0!==this.groupToggler&&null!==this.groupToggler&&""!==this.groupToggler}releaseGroupBindings(){this.groupBoxesBindings&&this.groupBoxesBindings.forEach(e=>{e.elementRef.removeEventListener("change",e.listener)}),this.groupBoxesBindings=[]}changeGroupElementHandler(){if(this.indeterminate){const e=this.totalGroupBoxesCount,t=this.groupCheckedCount;t>0&&t<e?this.setIndeterminate():0===t?this.uncheck(!0):this.check(!0)}else this.groupCheckedCount===this.totalGroupBoxesCount?this.check(!0):this.uncheck(!0)}handleGroupElementsOnTogglerCheck(e){this.groupBoxesBindings.forEach(t=>{t.elementRef.group===this.groupToggler&&(e?t.elementRef.check():t.elementRef.uncheck())})}clickHandler(){this.disabled||(this.checked?this.uncheck():this.check())}getCheckboxIcon(){return this.isToggler&&this.indeterminate&&this.indeterminateState?h("i",{class:"indeterminate"}):this.checked?h("i",{class:"checked"}):h("i",{class:"unchecked"})}render(){return h("div",{onClick:this.clickHandler.bind(this)},h("input",{type:"checkbox",name:this.name,id:this.id,value:this.value}),this.getCheckboxIcon(),h("label",null,h("slot",null)))}static get is(){return"wrsts-checkbox"}static get properties(){return{check:{method:!0},checked:{type:Boolean,attr:"checked",mutable:!0},disabled:{type:Boolean,attr:"disabled"},getData:{method:!0},getGroupBoxesBindings:{method:!0},getNativeElement:{method:!0},group:{type:String,attr:"group"},groupToggler:{type:String,attr:"group-toggler",watchCallbacks:["onGroupTogglerChanged"]},hidden:{type:Boolean,attr:"hidden"},id:{type:String,attr:"id"},indeterminate:{type:Boolean,attr:"indeterminate"},indeterminateState:{state:!0},name:{type:String,attr:"name"},rebindGroup:{method:!0},setIndeterminate:{method:!0},toJson:{method:!0},uncheck:{method:!0},value:{type:String,attr:"value"},wrstsCheckBox:{elementRef:!0}}}static get events(){return[{name:"change",method:"change",bubbles:!0,cancelable:!0,composed:!0}]}static get style(){return"wrsts-checkbox{user-select:none;display:inline-block;font-family:Helvetica,sans-serif}wrsts-checkbox[hidden]{display:none}wrsts-checkbox[disabled]{color:gray}wrsts-checkbox div{display:inline-block}wrsts-checkbox label{margin-left:4px}wrsts-checkbox input[type=checkbox]{display:none}wrsts-checkbox i{display:inline-block;width:20px;height:20px;margin-bottom:-4px}wrsts-checkbox i.checked{background:url(/assets/img/checkbox-checked.svg)}wrsts-checkbox i.unchecked{background:url(/assets/img/checkbox-unchecked.svg)}wrsts-checkbox i.indeterminate{background:url(/assets/img/checkbox-indeterminate.svg)}"}}export{WrstsCheckbox};