/*! Built with http://stenciljs.com */
const{h,Context}=window.WrstsComponents;class WrstsCheckbox{constructor(){this.checked=!1,this.disabled=!1,this.groupBoxesBindings=[]}onGroupTogglerChanged(e){null===e||void 0===e||""===e?this.releaseGroupBindings():this.rebindGroup()}check(e){this.checked||(this.checked=!0,this.checkbox.checked=!0,!e&&this.handleGroupElementsOnTogglerCheck(!0),this.change.emit(!0))}uncheck(e){this.checked&&(this.checked=!1,this.checkbox.checked=!1,!e&&this.handleGroupElementsOnTogglerCheck(!1),this.change.emit(!1))}getNativeElement(){return this.checkbox}rebindGroup(){if(!this.isToggler)return;this.releaseGroupBindings();const e=Array.prototype.slice.call(document.querySelectorAll(`wrsts-checkbox[group="${this.groupToggler}"]`));e&&(this.groupBoxesBindings=[],e.forEach(e=>{this.groupBoxesBindings.push({elementRef:e,listener:e.addEventListener("change",this.changeGroupElementHandler.bind(this))})}))}getGroupBoxesBindings(){return this.groupBoxesBindings}getData(){return[].filter.call(this.wrstsCheckBox.attributes,e=>/^data-/.test(e.name)).map(e=>{return{[e.name.substr(5).replace(/-(.)/g,(e,t)=>t.toUpperCase())]:e.value}})}toJson(){return this.isToggler?this.groupBoxesBindings.reduce((e,t,s)=>{return e[t.elementRef.name||t.elementRef.id||s]={value:t.elementRef.checked,data:t.elementRef.getData()},e},{}):{[this.name||this.id||0]:{value:this.checked,data:this.getData()}}}componentDidLoad(){this.checkbox=this.wrstsCheckBox.querySelector('input[type="checkbox"]'),this.checkbox.checked=this.checked,this.rebindGroup()}get totalGroupBoxesCount(){return this.groupBoxesBindings.filter(e=>e.elementRef.group===this.groupToggler).length}get groupCheckedCount(){return this.groupBoxesBindings.filter(e=>e.elementRef.group===this.groupToggler&&e.elementRef.checked).length}get isToggler(){return void 0!==this.groupToggler&&null!==this.groupToggler&&""!==this.groupToggler}releaseGroupBindings(){this.groupBoxesBindings&&this.groupBoxesBindings.forEach(e=>{e.elementRef.removeEventListener("change",e.listener)}),this.groupBoxesBindings=[]}changeGroupElementHandler(){this.groupCheckedCount===this.totalGroupBoxesCount?this.check(!0):this.uncheck(!0)}handleGroupElementsOnTogglerCheck(e){this.groupBoxesBindings.forEach(t=>{t.elementRef.group===this.groupToggler&&(t.elementRef.checked=e)})}clickHandler(){this.disabled||(this.checked?this.uncheck():this.check())}getCheckboxIcon(){return this.checked?h("i",{class:"checked"}):h("i",{class:"unchecked"})}render(){return h("div",{class:"webresorts-checkbox-container",onClick:this.clickHandler.bind(this)},h("input",{type:"checkbox",name:this.name,id:this.id}),this.getCheckboxIcon(),h("label",null,h("slot",null)))}static get is(){return"wrsts-checkbox"}static get properties(){return{check:{method:!0},checked:{type:Boolean,attr:"checked",mutable:!0},customData:{type:String,attr:"custom-data"},disabled:{type:Boolean,attr:"disabled"},getData:{method:!0},getGroupBoxesBindings:{method:!0},getNativeElement:{method:!0},group:{type:String,attr:"group"},groupToggler:{type:String,attr:"group-toggler",watchCallbacks:["onGroupTogglerChanged"]},id:{type:String,attr:"id"},name:{type:String,attr:"name"},rebindGroup:{method:!0},toJson:{method:!0},uncheck:{method:!0},wrstsCheckBox:{elementRef:!0}}}static get events(){return[{name:"change",method:"change",bubbles:!0,cancelable:!0,composed:!0}]}static get style(){return"wrsts-checkbox{user-select:none;display:inline-block}wrsts-checkbox div{display:inline-block}wrsts-checkbox label{margin-left:4px}wrsts-checkbox input[type=checkbox]{display:none}wrsts-checkbox i{display:inline-block;width:20px;height:20px;margin-bottom:-4px}wrsts-checkbox i.checked{background:url(/assets/img/checkbox-checked.svg)}wrsts-checkbox i.unchecked{background:url(/assets/img/checkbox-unchecked.svg)}wrsts-checkbox[disabled]{color:gray}"}}export{WrstsCheckbox};